<h3>Make a Booking for <%= @dj.name %></h3>
<%= simple_form_for [@dj, @booking], html: { id: "booking-form" } do |f| %>
  <%= f.hidden_field :dj_id, value: @dj.id %>
  <%= f.label :start_time %>
  <%= f.datetime_local_field :start_time, class: "start-time-input" %>

  <%= f.label :end_time %>
  <%= f.datetime_local_field :end_time, class: "end-time-input" %>

  <%= f.input :total_price, placeholder: "Enter the total price", input_html: { readonly: true }, wrapper_html: { class: "total-price-wrapper" } %>
  <%= f.submit class: "btn btn-flat" %>
<% end %>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const startTimeInput = document.querySelector(".start-time-input");
    const endTimeInput = document.querySelector(".end-time-input");
    const totalPriceInput = document.querySelector("#booking_total_price");

    // Function to calculate the duration in hours between start and end times
    function calculateDurationInHours(start, end) {
      const durationInMillis = new Date(end) - new Date(start);
      return durationInMillis / (1000 * 60 * 60);
    }

    // Function to update the total price based on the rate and duration
    function updateTotalPrice() {
      const startTime = startTimeInput.value;
      const endTime = endTimeInput.value;
      const durationInHours = calculateDurationInHours(startTime, endTime);
      const ratePerHour = <%= @dj.rate %>;
      const totalPrice = (durationInHours * ratePerHour).toFixed(2);
      totalPriceInput.value = totalPrice;
    }

    // Update the total price when start or end time inputs change
    startTimeInput.addEventListener("change", updateTotalPrice);
    endTimeInput.addEventListener("change", updateTotalPrice);

    // Initial update of total price
    updateTotalPrice();
  });
</script>
