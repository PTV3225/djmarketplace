<div class="container mt-4">
  <div class="row">
    <div class="col-md-6 offset-md-3">
      <h3 class="mb-4">Make a Booking for <%= @dj.name %></h3>
      <%= simple_form_for [@dj, @booking], html: { id: "booking-form" } do |f| %>
        <%= f.hidden_field :dj_id, value: @dj.id %>
        <%= f.hidden_field :status, value: "pending" %>
<div class="mb-3">
          <%= f.label :date, class: "form-label" %>
          <%= f.date_field :date, class: "form-control date-input" %>
        </div>

        <div class="mb-3">
          <%= f.label :start_time, class: "form-label" %>
          <%= f.time_field :start_time, class: "form-control start-time-input" %>
        </div>

        <div class="mb-3">
          <%= f.label :end_time, class: "form-label" %>
          <%= f.time_field :end_time, class: "form-control end-time-input" %>
        </div>
        <div class="mb-3">
          <%= f.input :total_price, placeholder: "cost for hours", input_html: { readonly: true }, wrapper_html: { class: "total-price-wrapper" }, label: false, id: "booking_total_price" %>
        </div>

        <%= f.submit "Book Now", class: "btn btn-primary" %>
      <% end %>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const startTimeInput = document.querySelector(".start-time-input");
    const endTimeInput = document.querySelector(".end-time-input");
    const totalPriceField = document.querySelector("#booking_total_price");

    startTimeInput.addEventListener("change", updateTotalPrice);
    endTimeInput.addEventListener("change", updateTotalPrice);

    function getTimeInMilliseconds(timeInput) {
      const timeParts = timeInput.split(":");
      const hours = parseInt(timeParts[0], 10);
      const minutes = parseInt(timeParts[1], 10);
      return hours * 3600000 + minutes * 60000; // 1 hour = 3600000 ms, 1 minute = 60000 ms
    }

    function updateTotalPrice() {
      const startTime = getTimeInMilliseconds(startTimeInput.value);
      const endTime = getTimeInMilliseconds(endTimeInput.value);
      const durationInMillis = endTime - startTime;
      const durationInHours = durationInMillis / 3600000; // Convert back to hours
      const ratePerHour = <%= @dj.rate %>; // Replace this with the actual rate of the DJ
      const totalPrice = (durationInHours * ratePerHour).toFixed(2);

      if (isNaN(totalPrice)) {
        totalPriceField.value = "";
      } else {
        totalPriceField.value = totalPrice;
      }
    }
  });
</script>
